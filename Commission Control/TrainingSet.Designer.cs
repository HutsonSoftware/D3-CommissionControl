//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace D3.Commission {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TrainingSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TrainingSet : global::System.Data.DataSet {
        
        private TrainingDataTable tableTraining;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TrainingSet() {
            BeginInit();
            InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected TrainingSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((IsBinarySerialized(info, context) == true)) {
                InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(SchemaChanged);
                Tables.CollectionChanged += schemaChangedHandler1;
                Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Training"] != null)) {
                    base.Tables.Add(new TrainingDataTable(ds.Tables["Training"]));
                }
                DataSetName = ds.DataSetName;
                Prefix = ds.Prefix;
                Namespace = ds.Namespace;
                Locale = ds.Locale;
                CaseSensitive = ds.CaseSensitive;
                EnforceConstraints = ds.EnforceConstraints;
                Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                InitVars();
            }
            else {
                ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TrainingDataTable Training {
            get {
                return tableTraining;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return _schemaSerializationMode;
            }
            set {
                _schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            BeginInit();
            InitClass();
            EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            TrainingSet cln = ((TrainingSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Training"] != null)) {
                    base.Tables.Add(new TrainingDataTable(ds.Tables["Training"]));
                }
                DataSetName = ds.DataSetName;
                Prefix = ds.Prefix;
                Namespace = ds.Namespace;
                Locale = ds.Locale;
                CaseSensitive = ds.CaseSensitive;
                EnforceConstraints = ds.EnforceConstraints;
                Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                InitVars();
            }
            else {
                ReadXml(reader);
                InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            tableTraining = ((TrainingDataTable)(base.Tables["Training"]));
            if ((initTable == true)) {
                if ((tableTraining != null)) {
                    tableTraining.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            DataSetName = "TrainingSet";
            Prefix = "";
            Namespace = "http://tempuri.org/TrainingSet.xsd";
            EnforceConstraints = true;
            SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            tableTraining = new TrainingDataTable();
            base.Tables.Add(tableTraining);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTraining() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TrainingSet ds = new TrainingSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TrainingRowChangeEventHandler(object sender, TrainingRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TrainingDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTotalCost;
            
            private global::System.Data.DataColumn columnCostPerAttendee;
            
            private global::System.Data.DataColumn columnD3PoNumber;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnEventCourse;
            
            private global::System.Data.DataColumn columnEventName;
            
            private global::System.Data.DataColumn columnInstructor;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnPresenter;
            
            private global::System.Data.DataColumn columnEventType;
            
            private global::System.Data.DataColumn columnEventState;
            
            private global::System.Data.DataColumn columnEventStateCodeName;
            
            private global::System.Data.DataColumn columnOrderStateCode;
            
            private global::System.Data.DataColumn columnOrderStateCodeName;
            
            private global::System.Data.DataColumn columnAttendeeName;
            
            private global::System.Data.DataColumn columnAttendeeInvoiceDetailName;
            
            private global::System.Data.DataColumn columnInvoiceName;
            
            private global::System.Data.DataColumn columnAccountID;
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnContactID;
            
            private global::System.Data.DataColumn columnContactName;
            
            private global::System.Data.DataColumn columnAttendeePrice;
            
            private global::System.Data.DataColumn columnOpportunityName;
            
            private global::System.Data.DataColumn columnEventDate;
            
            private global::System.Data.DataColumn columnAttendeeStateCode;
            
            private global::System.Data.DataColumn columnAttendeeStateCodeName;
            
            private global::System.Data.DataColumn columnordernumber;
            
            private global::System.Data.DataColumn columnOpportunityStatecode;
            
            private global::System.Data.DataColumn columnOpportunityStateCodeName;
            
            private global::System.Data.DataColumn columnattendeeinvoicedetailstatecodename;
            
            private global::System.Data.DataColumn columninvoicestatecode;
            
            private global::System.Data.DataColumn columninvoicestatecodename;
            
            private global::System.Data.DataColumn columnSalesPerson;
            
            private global::System.Data.DataColumn columnNumberAttended;
            
            private global::System.Data.DataColumn columnAttendeeState;
            
            private global::System.Data.DataColumn columnAttendeeStateName;
            
            private global::System.Data.DataColumn columnCommissionPaid;
            
            private global::System.Data.DataColumn columnCommissionPercent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrainingDataTable() {
                TableName = "Training";
                BeginInit();
                InitClass();
                EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TrainingDataTable(global::System.Data.DataTable table) {
                TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    Namespace = table.Namespace;
                }
                Prefix = table.Prefix;
                MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TrainingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalCostColumn {
                get {
                    return columnTotalCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostPerAttendeeColumn {
                get {
                    return columnCostPerAttendee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D3PoNumberColumn {
                get {
                    return columnD3PoNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EventCourseColumn {
                get {
                    return columnEventCourse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EventNameColumn {
                get {
                    return columnEventName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InstructorColumn {
                get {
                    return columnInstructor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PresenterColumn {
                get {
                    return columnPresenter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EventTypeColumn {
                get {
                    return columnEventType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EventStateColumn {
                get {
                    return columnEventState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EventStateCodeNameColumn {
                get {
                    return columnEventStateCodeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderStateCodeColumn {
                get {
                    return columnOrderStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderStateCodeNameColumn {
                get {
                    return columnOrderStateCodeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttendeeNameColumn {
                get {
                    return columnAttendeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttendeeInvoiceDetailNameColumn {
                get {
                    return columnAttendeeInvoiceDetailName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceNameColumn {
                get {
                    return columnInvoiceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountIDColumn {
                get {
                    return columnAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactIDColumn {
                get {
                    return columnContactID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactNameColumn {
                get {
                    return columnContactName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttendeePriceColumn {
                get {
                    return columnAttendeePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpportunityNameColumn {
                get {
                    return columnOpportunityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EventDateColumn {
                get {
                    return columnEventDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttendeeStateCodeColumn {
                get {
                    return columnAttendeeStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttendeeStateCodeNameColumn {
                get {
                    return columnAttendeeStateCodeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ordernumberColumn {
                get {
                    return columnordernumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpportunityStatecodeColumn {
                get {
                    return columnOpportunityStatecode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpportunityStateCodeNameColumn {
                get {
                    return columnOpportunityStateCodeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attendeeinvoicedetailstatecodenameColumn {
                get {
                    return columnattendeeinvoicedetailstatecodename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoicestatecodeColumn {
                get {
                    return columninvoicestatecode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoicestatecodenameColumn {
                get {
                    return columninvoicestatecodename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesPersonColumn {
                get {
                    return columnSalesPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberAttendedColumn {
                get {
                    return columnNumberAttended;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttendeeStateColumn {
                get {
                    return columnAttendeeState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttendeeStateNameColumn {
                get {
                    return columnAttendeeStateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommissionPaidColumn {
                get {
                    return columnCommissionPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommissionPercentColumn {
                get {
                    return columnCommissionPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrainingRow this[int index] {
                get {
                    return ((TrainingRow)(Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrainingRowChangeEventHandler TrainingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrainingRowChangeEventHandler TrainingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrainingRowChangeEventHandler TrainingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrainingRowChangeEventHandler TrainingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTrainingRow(TrainingRow row) {
                Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrainingRow AddTrainingRow(
                        decimal TotalCost, 
                        decimal CostPerAttendee, 
                        string D3PoNumber, 
                        System.DateTime Date, 
                        string EventCourse, 
                        string EventName, 
                        string Instructor, 
                        string Location, 
                        string Presenter, 
                        string EventType, 
                        string EventState, 
                        string EventStateCodeName, 
                        int OrderStateCode, 
                        string OrderStateCodeName, 
                        string AttendeeName, 
                        string AttendeeInvoiceDetailName, 
                        string InvoiceName, 
                        System.Guid AccountID, 
                        string AccountName, 
                        System.Guid ContactID, 
                        string ContactName, 
                        decimal AttendeePrice, 
                        string OpportunityName, 
                        System.DateTime EventDate, 
                        int AttendeeStateCode, 
                        string AttendeeStateCodeName, 
                        string ordernumber, 
                        int OpportunityStatecode, 
                        string OpportunityStateCodeName, 
                        string attendeeinvoicedetailstatecodename, 
                        int invoicestatecode, 
                        string invoicestatecodename, 
                        string SalesPerson, 
                        int NumberAttended, 
                        int AttendeeState, 
                        string AttendeeStateName, 
                        System.DateTime CommissionPaid, 
                        decimal CommissionPercent) {
                TrainingRow rowTrainingRow = ((TrainingRow)(NewRow()));
                object[] columnValuesArray = new object[] {
                        TotalCost,
                        CostPerAttendee,
                        D3PoNumber,
                        Date,
                        EventCourse,
                        EventName,
                        Instructor,
                        Location,
                        Presenter,
                        EventType,
                        EventState,
                        EventStateCodeName,
                        OrderStateCode,
                        OrderStateCodeName,
                        AttendeeName,
                        AttendeeInvoiceDetailName,
                        InvoiceName,
                        AccountID,
                        AccountName,
                        ContactID,
                        ContactName,
                        AttendeePrice,
                        OpportunityName,
                        EventDate,
                        AttendeeStateCode,
                        AttendeeStateCodeName,
                        ordernumber,
                        OpportunityStatecode,
                        OpportunityStateCodeName,
                        attendeeinvoicedetailstatecodename,
                        invoicestatecode,
                        invoicestatecodename,
                        SalesPerson,
                        NumberAttended,
                        AttendeeState,
                        AttendeeStateName,
                        CommissionPaid,
                        CommissionPercent};
                rowTrainingRow.ItemArray = columnValuesArray;
                Rows.Add(rowTrainingRow);
                return rowTrainingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TrainingDataTable cln = ((TrainingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TrainingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                columnTotalCost = base.Columns["TotalCost"];
                columnCostPerAttendee = base.Columns["CostPerAttendee"];
                columnD3PoNumber = base.Columns["D3PoNumber"];
                columnDate = base.Columns["Date"];
                columnEventCourse = base.Columns["EventCourse"];
                columnEventName = base.Columns["EventName"];
                columnInstructor = base.Columns["Instructor"];
                columnLocation = base.Columns["Location"];
                columnPresenter = base.Columns["Presenter"];
                columnEventType = base.Columns["EventType"];
                columnEventState = base.Columns["EventState"];
                columnEventStateCodeName = base.Columns["EventStateCodeName"];
                columnOrderStateCode = base.Columns["OrderStateCode"];
                columnOrderStateCodeName = base.Columns["OrderStateCodeName"];
                columnAttendeeName = base.Columns["AttendeeName"];
                columnAttendeeInvoiceDetailName = base.Columns["AttendeeInvoiceDetailName"];
                columnInvoiceName = base.Columns["InvoiceName"];
                columnAccountID = base.Columns["AccountID"];
                columnAccountName = base.Columns["AccountName"];
                columnContactID = base.Columns["ContactID"];
                columnContactName = base.Columns["ContactName"];
                columnAttendeePrice = base.Columns["AttendeePrice"];
                columnOpportunityName = base.Columns["OpportunityName"];
                columnEventDate = base.Columns["EventDate"];
                columnAttendeeStateCode = base.Columns["AttendeeStateCode"];
                columnAttendeeStateCodeName = base.Columns["AttendeeStateCodeName"];
                columnordernumber = base.Columns["ordernumber"];
                columnOpportunityStatecode = base.Columns["OpportunityStatecode"];
                columnOpportunityStateCodeName = base.Columns["OpportunityStateCodeName"];
                columnattendeeinvoicedetailstatecodename = base.Columns["attendeeinvoicedetailstatecodename"];
                columninvoicestatecode = base.Columns["invoicestatecode"];
                columninvoicestatecodename = base.Columns["invoicestatecodename"];
                columnSalesPerson = base.Columns["SalesPerson"];
                columnNumberAttended = base.Columns["NumberAttended"];
                columnAttendeeState = base.Columns["AttendeeState"];
                columnAttendeeStateName = base.Columns["AttendeeStateName"];
                columnCommissionPaid = base.Columns["CommissionPaid"];
                columnCommissionPercent = base.Columns["CommissionPercent"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                columnTotalCost = new global::System.Data.DataColumn("TotalCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnTotalCost);
                columnCostPerAttendee = new global::System.Data.DataColumn("CostPerAttendee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnCostPerAttendee);
                columnD3PoNumber = new global::System.Data.DataColumn("D3PoNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnD3PoNumber);
                columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnDate);
                columnEventCourse = new global::System.Data.DataColumn("EventCourse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnEventCourse);
                columnEventName = new global::System.Data.DataColumn("EventName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnEventName);
                columnInstructor = new global::System.Data.DataColumn("Instructor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnInstructor);
                columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnLocation);
                columnPresenter = new global::System.Data.DataColumn("Presenter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnPresenter);
                columnEventType = new global::System.Data.DataColumn("EventType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnEventType);
                columnEventState = new global::System.Data.DataColumn("EventState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnEventState);
                columnEventStateCodeName = new global::System.Data.DataColumn("EventStateCodeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnEventStateCodeName);
                columnOrderStateCode = new global::System.Data.DataColumn("OrderStateCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnOrderStateCode);
                columnOrderStateCodeName = new global::System.Data.DataColumn("OrderStateCodeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnOrderStateCodeName);
                columnAttendeeName = new global::System.Data.DataColumn("AttendeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnAttendeeName);
                columnAttendeeInvoiceDetailName = new global::System.Data.DataColumn("AttendeeInvoiceDetailName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnAttendeeInvoiceDetailName);
                columnInvoiceName = new global::System.Data.DataColumn("InvoiceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnInvoiceName);
                columnAccountID = new global::System.Data.DataColumn("AccountID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnAccountID);
                columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnAccountName);
                columnContactID = new global::System.Data.DataColumn("ContactID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnContactID);
                columnContactName = new global::System.Data.DataColumn("ContactName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnContactName);
                columnAttendeePrice = new global::System.Data.DataColumn("AttendeePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnAttendeePrice);
                columnOpportunityName = new global::System.Data.DataColumn("OpportunityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnOpportunityName);
                columnEventDate = new global::System.Data.DataColumn("EventDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnEventDate);
                columnAttendeeStateCode = new global::System.Data.DataColumn("AttendeeStateCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnAttendeeStateCode);
                columnAttendeeStateCodeName = new global::System.Data.DataColumn("AttendeeStateCodeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnAttendeeStateCodeName);
                columnordernumber = new global::System.Data.DataColumn("ordernumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnordernumber);
                columnOpportunityStatecode = new global::System.Data.DataColumn("OpportunityStatecode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnOpportunityStatecode);
                columnOpportunityStateCodeName = new global::System.Data.DataColumn("OpportunityStateCodeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnOpportunityStateCodeName);
                columnattendeeinvoicedetailstatecodename = new global::System.Data.DataColumn("attendeeinvoicedetailstatecodename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnattendeeinvoicedetailstatecodename);
                columninvoicestatecode = new global::System.Data.DataColumn("invoicestatecode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columninvoicestatecode);
                columninvoicestatecodename = new global::System.Data.DataColumn("invoicestatecodename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columninvoicestatecodename);
                columnSalesPerson = new global::System.Data.DataColumn("SalesPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnSalesPerson);
                columnNumberAttended = new global::System.Data.DataColumn("NumberAttended", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnNumberAttended);
                columnAttendeeState = new global::System.Data.DataColumn("AttendeeState", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnAttendeeState);
                columnAttendeeStateName = new global::System.Data.DataColumn("AttendeeStateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnAttendeeStateName);
                columnCommissionPaid = new global::System.Data.DataColumn("CommissionPaid", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnCommissionPaid);
                columnCommissionPercent = new global::System.Data.DataColumn("CommissionPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(columnCommissionPercent);
                columnCostPerAttendee.ReadOnly = true;
                columnD3PoNumber.MaxLength = 100;
                columnDate.ReadOnly = true;
                columnEventCourse.MaxLength = 100;
                columnEventName.MaxLength = 100;
                columnInstructor.MaxLength = 255;
                columnLocation.MaxLength = 100;
                columnPresenter.MaxLength = 160;
                columnEventType.MaxLength = 255;
                columnEventState.MaxLength = 255;
                columnEventStateCodeName.MaxLength = 255;
                columnOrderStateCode.AllowDBNull = false;
                columnOrderStateCodeName.MaxLength = 255;
                columnAttendeeName.MaxLength = 100;
                columnAttendeeInvoiceDetailName.MaxLength = 100;
                columnInvoiceName.MaxLength = 300;
                columnAccountName.MaxLength = 160;
                columnContactName.MaxLength = 160;
                columnOpportunityName.MaxLength = 300;
                columnEventDate.ReadOnly = true;
                columnAttendeeStateCode.AllowDBNull = false;
                columnAttendeeStateCodeName.MaxLength = 255;
                columnordernumber.AllowDBNull = false;
                columnordernumber.MaxLength = 100;
                columnOpportunityStatecode.AllowDBNull = false;
                columnOpportunityStateCodeName.MaxLength = 255;
                columnattendeeinvoicedetailstatecodename.MaxLength = 255;
                columninvoicestatecode.AllowDBNull = false;
                columninvoicestatecodename.MaxLength = 255;
                columnSalesPerson.MaxLength = 160;
                columnAttendeeStateName.MaxLength = 255;
                columnCommissionPaid.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrainingRow NewTrainingRow() {
                return ((TrainingRow)(NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TrainingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TrainingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((TrainingRowChanged != null)) {
                    TrainingRowChanged(this, new TrainingRowChangeEvent(((TrainingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((TrainingRowChanging != null)) {
                    TrainingRowChanging(this, new TrainingRowChangeEvent(((TrainingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((TrainingRowDeleted != null)) {
                    TrainingRowDeleted(this, new TrainingRowChangeEvent(((TrainingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((TrainingRowDeleting != null)) {
                    TrainingRowDeleting(this, new TrainingRowChangeEvent(((TrainingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTrainingRow(TrainingRow row) {
                Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TrainingSet ds = new TrainingSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TrainingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TrainingRow : global::System.Data.DataRow {
            
            private TrainingDataTable tableTraining;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TrainingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                tableTraining = ((TrainingDataTable)(Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalCost {
                get {
                    try {
                        return ((decimal)(this[tableTraining.TotalCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCost\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.TotalCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CostPerAttendee {
                get {
                    try {
                        return ((decimal)(this[tableTraining.CostPerAttendeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostPerAttendee\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.CostPerAttendeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string D3PoNumber {
                get {
                    try {
                        return ((string)(this[tableTraining.D3PoNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D3PoNumber\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.D3PoNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[tableTraining.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EventCourse {
                get {
                    try {
                        return ((string)(this[tableTraining.EventCourseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventCourse\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.EventCourseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EventName {
                get {
                    try {
                        return ((string)(this[tableTraining.EventNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventName\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.EventNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Instructor {
                get {
                    try {
                        return ((string)(this[tableTraining.InstructorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instructor\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.InstructorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Location {
                get {
                    try {
                        return ((string)(this[tableTraining.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Presenter {
                get {
                    try {
                        return ((string)(this[tableTraining.PresenterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Presenter\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.PresenterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EventType {
                get {
                    try {
                        return ((string)(this[tableTraining.EventTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventType\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.EventTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EventState {
                get {
                    try {
                        return ((string)(this[tableTraining.EventStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventState\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.EventStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EventStateCodeName {
                get {
                    try {
                        return ((string)(this[tableTraining.EventStateCodeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventStateCodeName\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.EventStateCodeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrderStateCode {
                get {
                    return ((int)(this[tableTraining.OrderStateCodeColumn]));
                }
                set {
                    this[tableTraining.OrderStateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderStateCodeName {
                get {
                    try {
                        return ((string)(this[tableTraining.OrderStateCodeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderStateCodeName\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.OrderStateCodeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AttendeeName {
                get {
                    try {
                        return ((string)(this[tableTraining.AttendeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendeeName\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.AttendeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AttendeeInvoiceDetailName {
                get {
                    try {
                        return ((string)(this[tableTraining.AttendeeInvoiceDetailNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendeeInvoiceDetailName\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.AttendeeInvoiceDetailNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceName {
                get {
                    try {
                        return ((string)(this[tableTraining.InvoiceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceName\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.InvoiceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid AccountID {
                get {
                    try {
                        return ((global::System.Guid)(this[tableTraining.AccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountID\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.AccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[tableTraining.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ContactID {
                get {
                    try {
                        return ((global::System.Guid)(this[tableTraining.ContactIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactID\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.ContactIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactName {
                get {
                    try {
                        return ((string)(this[tableTraining.ContactNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactName\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.ContactNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AttendeePrice {
                get {
                    try {
                        return ((decimal)(this[tableTraining.AttendeePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendeePrice\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.AttendeePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpportunityName {
                get {
                    try {
                        return ((string)(this[tableTraining.OpportunityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpportunityName\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.OpportunityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime EventDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[tableTraining.EventDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventDate\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.EventDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AttendeeStateCode {
                get {
                    return ((int)(this[tableTraining.AttendeeStateCodeColumn]));
                }
                set {
                    this[tableTraining.AttendeeStateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AttendeeStateCodeName {
                get {
                    try {
                        return ((string)(this[tableTraining.AttendeeStateCodeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendeeStateCodeName\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.AttendeeStateCodeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ordernumber {
                get {
                    return ((string)(this[tableTraining.ordernumberColumn]));
                }
                set {
                    this[tableTraining.ordernumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OpportunityStatecode {
                get {
                    return ((int)(this[tableTraining.OpportunityStatecodeColumn]));
                }
                set {
                    this[tableTraining.OpportunityStatecodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpportunityStateCodeName {
                get {
                    try {
                        return ((string)(this[tableTraining.OpportunityStateCodeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpportunityStateCodeName\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.OpportunityStateCodeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string attendeeinvoicedetailstatecodename {
                get {
                    try {
                        return ((string)(this[tableTraining.attendeeinvoicedetailstatecodenameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attendeeinvoicedetailstatecodename\' in table \'Training\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.attendeeinvoicedetailstatecodenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int invoicestatecode {
                get {
                    return ((int)(this[tableTraining.invoicestatecodeColumn]));
                }
                set {
                    this[tableTraining.invoicestatecodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string invoicestatecodename {
                get {
                    try {
                        return ((string)(this[tableTraining.invoicestatecodenameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoicestatecodename\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.invoicestatecodenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesPerson {
                get {
                    try {
                        return ((string)(this[tableTraining.SalesPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesPerson\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.SalesPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberAttended {
                get {
                    try {
                        return ((int)(this[tableTraining.NumberAttendedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberAttended\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.NumberAttendedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AttendeeState {
                get {
                    try {
                        return ((int)(this[tableTraining.AttendeeStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendeeState\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.AttendeeStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AttendeeStateName {
                get {
                    try {
                        return ((string)(this[tableTraining.AttendeeStateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendeeStateName\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.AttendeeStateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CommissionPaid {
                get {
                    try {
                        return ((global::System.DateTime)(this[tableTraining.CommissionPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommissionPaid\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.CommissionPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CommissionPercent {
                get {
                    try {
                        return ((decimal)(this[tableTraining.CommissionPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommissionPercent\' in table \'Training\' is DBNull.", e);
                    }
                }
                set {
                    this[tableTraining.CommissionPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalCostNull() {
                return IsNull(tableTraining.TotalCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalCostNull() {
                this[tableTraining.TotalCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostPerAttendeeNull() {
                return IsNull(tableTraining.CostPerAttendeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostPerAttendeeNull() {
                this[tableTraining.CostPerAttendeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsD3PoNumberNull() {
                return IsNull(tableTraining.D3PoNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetD3PoNumberNull() {
                this[tableTraining.D3PoNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateNull() {
                return IsNull(tableTraining.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateNull() {
                this[tableTraining.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEventCourseNull() {
                return IsNull(tableTraining.EventCourseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEventCourseNull() {
                this[tableTraining.EventCourseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEventNameNull() {
                return IsNull(tableTraining.EventNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEventNameNull() {
                this[tableTraining.EventNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstructorNull() {
                return IsNull(tableTraining.InstructorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstructorNull() {
                this[tableTraining.InstructorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocationNull() {
                return IsNull(tableTraining.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocationNull() {
                this[tableTraining.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPresenterNull() {
                return IsNull(tableTraining.PresenterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPresenterNull() {
                this[tableTraining.PresenterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEventTypeNull() {
                return IsNull(tableTraining.EventTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEventTypeNull() {
                this[tableTraining.EventTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEventStateNull() {
                return IsNull(tableTraining.EventStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEventStateNull() {
                this[tableTraining.EventStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEventStateCodeNameNull() {
                return IsNull(tableTraining.EventStateCodeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEventStateCodeNameNull() {
                this[tableTraining.EventStateCodeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderStateCodeNameNull() {
                return IsNull(tableTraining.OrderStateCodeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderStateCodeNameNull() {
                this[tableTraining.OrderStateCodeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttendeeNameNull() {
                return IsNull(tableTraining.AttendeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttendeeNameNull() {
                this[tableTraining.AttendeeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttendeeInvoiceDetailNameNull() {
                return IsNull(tableTraining.AttendeeInvoiceDetailNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttendeeInvoiceDetailNameNull() {
                this[tableTraining.AttendeeInvoiceDetailNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceNameNull() {
                return IsNull(tableTraining.InvoiceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceNameNull() {
                this[tableTraining.InvoiceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountIDNull() {
                return IsNull(tableTraining.AccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountIDNull() {
                this[tableTraining.AccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountNameNull() {
                return IsNull(tableTraining.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountNameNull() {
                this[tableTraining.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactIDNull() {
                return IsNull(tableTraining.ContactIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactIDNull() {
                this[tableTraining.ContactIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactNameNull() {
                return IsNull(tableTraining.ContactNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactNameNull() {
                this[tableTraining.ContactNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttendeePriceNull() {
                return IsNull(tableTraining.AttendeePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttendeePriceNull() {
                this[tableTraining.AttendeePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpportunityNameNull() {
                return IsNull(tableTraining.OpportunityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpportunityNameNull() {
                this[tableTraining.OpportunityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEventDateNull() {
                return IsNull(tableTraining.EventDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEventDateNull() {
                this[tableTraining.EventDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttendeeStateCodeNameNull() {
                return IsNull(tableTraining.AttendeeStateCodeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttendeeStateCodeNameNull() {
                this[tableTraining.AttendeeStateCodeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpportunityStateCodeNameNull() {
                return IsNull(tableTraining.OpportunityStateCodeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpportunityStateCodeNameNull() {
                this[tableTraining.OpportunityStateCodeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattendeeinvoicedetailstatecodenameNull() {
                return IsNull(tableTraining.attendeeinvoicedetailstatecodenameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattendeeinvoicedetailstatecodenameNull() {
                this[tableTraining.attendeeinvoicedetailstatecodenameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsinvoicestatecodenameNull() {
                return IsNull(tableTraining.invoicestatecodenameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetinvoicestatecodenameNull() {
                this[tableTraining.invoicestatecodenameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesPersonNull() {
                return IsNull(tableTraining.SalesPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesPersonNull() {
                this[tableTraining.SalesPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberAttendedNull() {
                return IsNull(tableTraining.NumberAttendedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberAttendedNull() {
                this[tableTraining.NumberAttendedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttendeeStateNull() {
                return IsNull(tableTraining.AttendeeStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttendeeStateNull() {
                this[tableTraining.AttendeeStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttendeeStateNameNull() {
                return IsNull(tableTraining.AttendeeStateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttendeeStateNameNull() {
                this[tableTraining.AttendeeStateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommissionPaidNull() {
                return IsNull(tableTraining.CommissionPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommissionPaidNull() {
                this[tableTraining.CommissionPaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommissionPercentNull() {
                return IsNull(tableTraining.CommissionPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommissionPercentNull() {
                this[tableTraining.CommissionPercentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TrainingRowChangeEvent : global::System.EventArgs {
            
            private TrainingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrainingRowChangeEvent(TrainingRow row, global::System.Data.DataRowAction action) {
                eventRow = row;
                eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrainingRow Row {
                get {
                    return eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return eventAction;
                }
            }
        }
    }
}
namespace D3.Commission.TrainingSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TrainingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TrainingTableAdapter() {
            ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((_adapter == null)) {
                    InitAdapter();
                }
                return _adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((_connection == null)) {
                    InitConnection();
                }
                return _connection;
            }
            set {
                _connection = value;
                if ((Adapter.InsertCommand != null)) {
                    Adapter.InsertCommand.Connection = value;
                }
                if ((Adapter.DeleteCommand != null)) {
                    Adapter.DeleteCommand.Connection = value;
                }
                if ((Adapter.UpdateCommand != null)) {
                    Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < CommandCollection.Length); i = (i + 1)) {
                    if ((CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((_commandCollection == null)) {
                    InitCommandCollection();
                }
                return _commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return _clearBeforeFill;
            }
            set {
                _clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            _adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Training";
            tableMapping.ColumnMappings.Add("TotalCost", "TotalCost");
            tableMapping.ColumnMappings.Add("CostPerAttendee", "CostPerAttendee");
            tableMapping.ColumnMappings.Add("D3PoNumber", "D3PoNumber");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("EventCourse", "EventCourse");
            tableMapping.ColumnMappings.Add("EventName", "EventName");
            tableMapping.ColumnMappings.Add("Instructor", "Instructor");
            tableMapping.ColumnMappings.Add("Location", "Location");
            tableMapping.ColumnMappings.Add("Presenter", "Presenter");
            tableMapping.ColumnMappings.Add("EventType", "EventType");
            tableMapping.ColumnMappings.Add("EventState", "EventState");
            tableMapping.ColumnMappings.Add("EventStateCodeName", "EventStateCodeName");
            tableMapping.ColumnMappings.Add("OrderStateCode", "OrderStateCode");
            tableMapping.ColumnMappings.Add("OrderStateCodeName", "OrderStateCodeName");
            tableMapping.ColumnMappings.Add("AttendeeName", "AttendeeName");
            tableMapping.ColumnMappings.Add("AttendeeInvoiceDetailName", "AttendeeInvoiceDetailName");
            tableMapping.ColumnMappings.Add("InvoiceName", "InvoiceName");
            tableMapping.ColumnMappings.Add("AccountID", "AccountID");
            tableMapping.ColumnMappings.Add("AccountName", "AccountName");
            tableMapping.ColumnMappings.Add("ContactID", "ContactID");
            tableMapping.ColumnMappings.Add("ContactName", "ContactName");
            tableMapping.ColumnMappings.Add("AttendeePrice", "AttendeePrice");
            tableMapping.ColumnMappings.Add("OpportunityName", "OpportunityName");
            tableMapping.ColumnMappings.Add("EventDate", "EventDate");
            tableMapping.ColumnMappings.Add("AttendeeStateCode", "AttendeeStateCode");
            tableMapping.ColumnMappings.Add("AttendeeStateCodeName", "AttendeeStateCodeName");
            tableMapping.ColumnMappings.Add("ordernumber", "ordernumber");
            tableMapping.ColumnMappings.Add("OpportunityStatecode", "OpportunityStatecode");
            tableMapping.ColumnMappings.Add("OpportunityStateCodeName", "OpportunityStateCodeName");
            tableMapping.ColumnMappings.Add("attendeeinvoicedetailstatecodename", "attendeeinvoicedetailstatecodename");
            tableMapping.ColumnMappings.Add("invoicestatecode", "invoicestatecode");
            tableMapping.ColumnMappings.Add("invoicestatecodename", "invoicestatecodename");
            tableMapping.ColumnMappings.Add("SalesPerson", "SalesPerson");
            tableMapping.ColumnMappings.Add("NumberAttended", "NumberAttended");
            tableMapping.ColumnMappings.Add("AttendeeState", "AttendeeState");
            tableMapping.ColumnMappings.Add("AttendeeStateName", "AttendeeStateName");
            tableMapping.ColumnMappings.Add("CommissionPaid", "CommissionPaid");
            tableMapping.ColumnMappings.Add("CommissionPercent", "CommissionPercent");
            _adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            _connection = new global::System.Data.SqlClient.SqlConnection();
            Settings settings = new Settings();
            _connection.ConnectionString = settings.GetConnectionString();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            _commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            _commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            _commandCollection[0].Connection = Connection;
            _commandCollection[0].CommandText = @"SELECT TotalCost, CostPerAttendee, D3PoNumber, Date, EventCourse, EventName, Instructor, Location, Presenter, EventType, EventState, EventStateCodeName, OrderStateCode, OrderStateCodeName, AttendeeName, AttendeeInvoiceDetailName, InvoiceName, AccountID, AccountName, ContactID, ContactName, AttendeePrice, OpportunityName, EventDate, AttendeeStateCode, AttendeeStateCodeName, ordernumber, OpportunityStatecode, OpportunityStateCodeName, attendeeinvoicedetailstatecodename, invoicestatecode, invoicestatecodename, SalesPerson, NumberAttended, AttendeeState, AttendeeStateName, CommissionPaid, CommissionPercent FROM dbo.Training";
            _commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TrainingSet.TrainingDataTable dataTable) {
            Adapter.SelectCommand = CommandCollection[0];
            if ((ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TrainingSet.TrainingDataTable GetData() {
            Adapter.SelectCommand = CommandCollection[0];
            TrainingSet.TrainingDataTable dataTable = new TrainingSet.TrainingDataTable();
            Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591